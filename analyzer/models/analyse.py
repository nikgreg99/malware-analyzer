from enum import Enum

from django.db import models
from django.utils.translation import gettext_lazy as _

from .target import Target


class Sandbox(Enum):
    CUCKOO = "Cuckoo"
    HYBRID_ANALYSIS = "Hybrid Analysis"
    FILE_IO = "FileIO"

    @classmethod
    def choices(cls):
        return [(key.name, key.value) for key in cls]


class Analyse(models.Model):

    class Meta:
        verbose_name = _("analyse_sandbox")
        verbose_name_plural = _("analyse_sandboxes")

    target = models.ForeignKey(Target, on_delete=models.CASCADE, null=True)
    sandbox = models.CharField(_("analyse_sandbox"), max_length=30, choices=Sandbox.choices(), default=Sandbox.CUCKOO)
    size = models.IntegerField(default=None)
    type = models.CharField(max_length=200, default="")
    MD5 = models.CharField(max_length=200, default="")
    SHA1 = models.CharField(max_length=200, default="")
    SHA256 = models.CharField(max_length=200, default="")
    SHA512 = models.CharField(max_length=200, default="", blank=True)
    CRC32 = models.IntegerField(default=0, blank=True)
    analyse_start_time = models.DateTimeField("analyse_start_time")
    ssdeep = models.CharField(max_length=148, default="", blank=True)
    strings = models.TextField(max_length=400, default="", blank=True)
