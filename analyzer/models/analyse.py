from django.db import models
from django.utils.translation import gettext_lazy as _

from .target import Target

from .utils import get_string_or_not_found, get_int_or_not_found


class Sandbox(models.TextChoices):
    CUCKOO = "Cuckoo", _("Cuckoo")
    HYBRID_ANALYSIS = "Hybrid Analysis", _("Hybrid Analysis"),
    FILE_SCAN_IO = "FileScanIO", _("FileScanIO"),
    VIRUS_TOTAL = "Virus Total", _("Virus Total")


class Analyse(models.Model):
    target = models.ForeignKey(Target, on_delete=models.CASCADE, null=True)
    sandbox = models.CharField(max_length=30, choices=Sandbox.choices, default=Sandbox.CUCKOO)
    size = models.IntegerField(default=0,blank=True)
    job_id = models.CharField(max_length=80, default="", blank=True)
    type = models.CharField(max_length=100, default="", blank=True)
    MD5 = models.CharField(max_length=33, default="", blank=True)
    SHA1 = models.CharField(max_length=42, default="", blank=True)
    SHA256 = models.CharField(max_length=65, default="", blank=True)
    SHA512 = models.CharField(max_length=129, default="", blank=True)
    CRC32 = models.IntegerField(default=0, blank=True)
    analyse_start_time = models.DateTimeField("analyse_start_time")
    ssdeep = models.CharField(max_length=148, default="", blank=True)
    strings = models.TextField(max_length=400, default="", blank=True)

    @property
    def has_MD5(self):
        return get_string_or_not_found(self.MD5)

    @property
    def has_SHA1(self):
        return get_string_or_not_found(self.SHA1)

    @property
    def has_SHA256(self):
        return get_string_or_not_found(self.SHA256)

    @property
    def has_SHA512(self):
        return get_string_or_not_found(self.SHA512)

    @property
    def has_ssdeep(self):
        return get_string_or_not_found(self.ssdeep)

    @property
    def has_CRC32(self):
        return get_int_or_not_found(self.CRC32)
