from analyzer.models import Overview
from analyzer.models.import_lib import Import
from analyzer.models.module import Module


def save_import_lib_if_not_exists(lib_import):
    name = lib_import['name']
    file_rva = lib_import['fileRva']
    lib_import, created = Import.objects.get_or_create(name=name, file_rva=file_rva)
    return lib_import


def save_module_if_not_exist(dict_module):
    module_name = dict_module['module']
    internal_imports = dict_module['imports']
    module, created = Module.objects.get_or_create(name=module_name)
    for internal_import in internal_imports:
        lib_import = save_import_lib_if_not_exists(internal_import)
        module.imports.add(lib_import)
    return module


def save_module(overview: Overview, dict_modules):
    for dict_module in dict_modules:
        module = save_module_if_not_exist(dict_module)
        overview.modules.add(module)
