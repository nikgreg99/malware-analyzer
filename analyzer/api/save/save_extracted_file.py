from analyzer.models import Overview
from analyzer.models.extracted_file import ExtractedFile


def save_extracted_file_if_not_exists(dict_file):
    submit_name = dict_file['submitName']
    size = dict_file['fileSize']
    MD5 = dict_file['digests']['MD5']
    SHA1 = dict_file['digests']['SHA-1']
    SHA256 = dict_file['digests']['SHA-256']
    SHA512 = dict_file['digests']['SHA-512']
    entropy = dict_file['metaData']['entropy']
    description = dict_file['extendedData']['fileMagicDescription']
    ssdeep = dict_file['extendedData']['ssdeep']
    resource_id = dict_file['metaData']['resourceID']

    extracted_file,create = ExtractedFile.objects.get_or_create(submit_name=submit_name, size=size, MD5=MD5, SHA1=SHA1,
                                                         SHA256=SHA256, SHA512=SHA512, entropy=entropy, ssdeep=ssdeep,
                                                         description=description, resource_id=resource_id)

    return extracted_file


def save_extracted_files(overview: Overview, dict_files: dict):
    for dict_file in dict_files:
        extracted_file = save_extracted_file_if_not_exists(dict_file)
        overview.extracted_files.add(extracted_file)
