from analyzer.models import MitreAttack


def save_mitre_rule(mitre_attack):
    tactic = mitre_attack['tactic']
    technique = mitre_attack['technique']
    attack_id = mitre_attack['attck_id']
    attack_id_wiki = mitre_attack['attck_id_wiki']
    mitre_rule_parent = mitre_attack['parent']

    parent_technique = ''
    parent_attack_id = ''
    parent_attack_id_wiki = ''

    if mitre_rule_parent is not None:
        parent_technique = mitre_attack['technique']
        parent_attack_id = mitre_attack['attck_id']
        parent_attack_id_wiki = mitre_attack['attck_id_wiki']

    mitre_attack_row, created = MitreAttack.objects.get_or_create(tactic=tactic, technique=technique,
                                                                  attack_id=attack_id, attack_id_wiki=attack_id_wiki,
                                                                  parent_technique=parent_technique,
                                                                  parent_attack_id=parent_attack_id,
                                                                  parent_attack_id_wiki=parent_attack_id_wiki)

    return mitre_attack_row

def save_mitre_rules(overview, mitre_rules):
    for mitre_rule in mitre_rules:
        mitre_rule_row = save_mitre_rule(mitre_rule)
        overview.mitre_attacks.add(mitre_rule_row)
