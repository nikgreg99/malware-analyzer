from analyzer.models import Overview
from analyzer.models.yara_rule import YaraRule


def check_key(dictionary, key):
    if key in dictionary:
        return dictionary[key]
    return ''


def save_yara_rule(rule: dict):
    identifier = rule['origin']['identifier']
    rule_name = rule['ruleName']
    verdict = rule['verdict']['verdict']
    author = check_key(rule['metaData'], 'author')
    date = check_key(rule['metaData'], 'date')
    description = check_key(rule['metaData'], 'description')
    file_type = check_key(rule['metaData'], 'filetype')
    reference = check_key(rule['metaData'], 'reference')

    yara_rule, created = YaraRule.objects.get_or_create(identifier=identifier, rule_name=rule_name, verdict=verdict,
                                                        author=author, date=date, description=description,
                                                        file_type=file_type, reference=reference)
    match_strings = rule['matchedStrings']
    for match_string in match_strings:
        yara_rule.match_strings.get_or_create(match_string=match_string)
    return yara_rule


def save_yara_rules(overview: Overview, yara_rules: dict):
    for yara_rule in yara_rules:
        yara_rule = save_yara_rule(yara_rule)
        overview.yara_rules.add(yara_rule)
