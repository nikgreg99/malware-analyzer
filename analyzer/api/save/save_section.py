from analyzer.models import CharReadable, Overview
from analyzer.models.section import Section


def save_section_if_not_exists(section: dict):
    name = section['name']
    va = section['va']
    file_rva = section['fileRva']
    virtual_size = section['virtualSize']
    size_of_raw_data = section['sizeOfRawData']
    MD5 = section['md5']
    entropy = section['entropy']
    characteristics = section['characteristics']
    characteristics_readable = section['characteristicsReadable']
    section_row, created = Section.objects.get_or_create(name=name, va=va, file_rva=file_rva, virtual_size=virtual_size,
                                                         size_raw_data=size_of_raw_data, MD5=MD5, entropy=entropy,
                                                         characteristics=characteristics)

    for characteristic_readable in characteristics_readable:
        section_row.char_readable.get_or_create(name=characteristic_readable)
    return section_row


def save_sections(overview: Overview, sections: dict):
    for section in sections:
        section_row = save_section_if_not_exists(section)
        overview.sections.add(section_row)
