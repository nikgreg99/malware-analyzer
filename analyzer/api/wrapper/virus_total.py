import requests
import urllib.parse
import base64

from analyzer.api.wrapper.utils import connect
from storage import upload_storage


def init_session(headers):
    session = requests.Session()
    session.headers = headers
    return session


class VirusTotalAPI(object):
    base_url = "https://www.virustotal.com/api/v3/"

    def __init__(self, api_key):
        self.file_session = init_session({
            'Accept': "application/json",
            'x-apikey': api_key
        })
        self.submit_url_session = init_session({
            'Accept': 'application/json',
            'Content-Type': 'application/x-www-form-urlencoded',
            'x-apikey': api_key
        })

    @staticmethod
    def create(api_key):
        return VirusTotalAPI(api_key)

    def submit_file(self, file_name):
        files = {"file": upload_storage.open(file_name, 'rb')}
        return connect(self.file_session, "POST", urllib.parse.urljoin(self.base_url, "files"), files=files)

    def file_rescan(self, file_id):
        return connect(self.file_session, "GET",
                       urllib.parse.urljoin(self.base_url, "files/{}/analyse").format(file_id))

    def get_file_report(self, file_id):
        return connect(self.file_session, "GET", urllib.parse.urljoin(self.base_url, "files/{}".format(file_id)))

    def get_analysis(self, analysis_id):
        return connect(self.file_session, "GET", urllib.parse.urljoin(self.base_url, "analyses/{}").format(analysis_id))

    def submit_url(self, url):
        payload = "url={}".format(url)
        return connect(self.submit_url_session, "POST", urllib.parse.urljoin(self.base_url, "urls"), data=payload)

    def get_url_report(self, url: str):
        url_id = base64.urlsafe_b64encode(url.encode()).decode().strip("=")
        return connect(self.file_session, "POST", urllib.parse.urljoin(self.base_url, "urls/{}".format(url_id)))
