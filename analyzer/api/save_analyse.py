from django.utils import timezone
from analyzer.models import Target, Analyse, Sandbox, TargetType


def save_scan_overview_with_hybrid_analysis(target: Target, overview_report: dict):
    if target.type == TargetType.URL:
        size = 0
        type = ""
    else:
        size = overview_report['size']
        type = overview_report['type']

    job_id = overview_report['job_id']
    MD5 = overview_report['md5']
    SHA1 = overview_report['sha1']
    SHA256 = overview_report['sha256']
    SHA512 = overview_report['sha512']
    analyse_start_time = overview_report['analysis_start_time']
    analyse = Analyse.objects.create(sandbox=Sandbox.HYBRID_ANALYSIS,
                                     size=size,
                                     type=type,
                                     job_id= job_id,
                                     MD5=MD5,
                                     SHA1=SHA1,
                                     SHA256=SHA256,
                                     SHA512=SHA512,
                                     analyse_start_time=analyse_start_time,
                                     target=target)
    return analyse


def save_file_overview_with_filescanIO(target: Target, overview_report: dict):
    print(overview_report)
    reports = overview_report['reports']
    report_key = list(reports.keys())[0]
    resources = reports[report_key]['resources']
    resource_key = list(resources.keys())[0]
    resource = resources[resource_key]
    size = resource['fileSize']
    MD5 = resource['digests']['MD5']
    SHA1 = resource['digests']['SHA-1']
    SHA256 = resource['digests']['SHA-256']
    SHA512 = resource['digests']['SHA-512']
    ssdeep = resource['extendedData']['ssdeep']
    type = resource['extendedData']['fileMagicDescription']

    analyse = Analyse.objects.create(sandbox= Sandbox.FILE_SCAN_IO,
                                     job_id= report_key,
                                     size = size,
                                     type = type,
                                     MD5 = MD5,
                                     SHA1 = SHA1,
                                     SHA256 = SHA256,
                                     SHA512 = SHA512,
                                     ssdeep=ssdeep,
                                     analyse_start_time=timezone.now(),
                                     target=target)
    return analyse
