from django.utils import timezone
from analyzer.models import Target, Overview, Sandbox, TargetType


def save_overview_cuckoo(target: Target, overview: dict):
    sample = overview['sample']
    file_size = sample['file_size']
    file_type = sample["file_type"]
    md5 = sample['md5']
    SHA1 = sample['sha1']
    SHA256 = sample['sha256']
    ssdeep = sample['ssdeep']
    SHA512 = sample['sha5112']
    CRC32 = sample['crc32']


def save_overview_hybrid_analysis(target: Target, overview: dict):
    if target.type == TargetType.URL:
        size = 0
        type = ""
    else:
        size = overview['size']
        type = overview['type']

    job_id = overview['job_id']
    MD5 = overview['md5']
    SHA1 = overview['sha1']
    SHA256 = overview['sha256']
    SHA512 = overview['sha512']
    threat_family = overview['vx_family']
    analyse_start_time = overview['analysis_start_time']
    analyse = Overview.objects.create(sandbox=Sandbox.HYBRID_ANALYSIS,
                                      size=size,
                                      type=type,
                                      job_id=job_id,
                                      MD5=MD5,
                                      SHA1=SHA1,
                                      SHA256=SHA256,
                                      SHA512=SHA512,
                                      analyse_start_time=analyse_start_time,
                                      target=target)
    return analyse


def save_overview_file_scan_io(target: Target, overview_report: dict):
    print(overview_report)

    reports = overview_report['reports']
    report_key = list(reports.keys())[0]
    resources = reports[report_key]['resources']
    resource_key = list(resources.keys())[0]
    resource = resources[resource_key]
    size = resource['fileSize']
    MD5 = resource['digests']['MD5']
    SHA1 = resource['digests']['SHA-1']
    SHA256 = resource['digests']['SHA-256']
    SHA512 = resource['digests']['SHA-512']
    ssdeep = resource['extendedData']['ssdeep']
    type = resource['extendedData']['fileMagicDescription']

    analyse = Overview.objects.create(sandbox=Sandbox.FILE_SCAN_IO,
                                      job_id=report_key,
                                      size=size,
                                      type=type,
                                      MD5=MD5,
                                      SHA1=SHA1,
                                      SHA256=SHA256,
                                      SHA512=SHA512,
                                      ssdeep=ssdeep,
                                      analyse_start_time=timezone.now(),
                                      target=target)
    return analyse
