from django.utils import timezone

from analyzer.api.save.save_header import save_header
from analyzer.api.save.save_section import save_sections
from analyzer.api.save.save_strings import save_strings
from analyzer.api.save.save_version_info import save_version_infos
from analyzer.models import Target, Overview, Sandbox, TargetType


def save_overview_cuckoo(target: Target, overview: dict):
    sample = overview['sample']
    file_size = sample['file_size']
    file_type = sample["file_type"]
    md5 = sample['md5']
    SHA1 = sample['sha1']
    SHA256 = sample['sha256']
    ssdeep = sample['ssdeep']
    SHA512 = sample['sha5112']
    CRC32 = sample['crc32']


def save_overview_hybrid_analysis(target: Target, overview: dict):
    size = overview['size']
    type = overview['type']

    job_id = overview['job_id']
    MD5 = overview['md5']
    SHA1 = overview['sha1']
    SHA256 = overview['sha256']
    SHA512 = overview['sha512']
    submission_time = overview['analysis_start_time']
    overview = Overview.objects.create(sandbox=Sandbox.HYBRID_ANALYSIS,
                                       size=size,
                                       type=type,
                                       job_id=job_id,
                                       MD5=MD5,
                                       SHA1=SHA1,
                                       SHA256=SHA256,
                                       SHA512=SHA512,
                                       submission_time=submission_time,
                                       target=target)
    return overview


def save_overview_file_scan_io(target: Target, overview_report: dict):
    reports = overview_report['reports']
    report_key = list(reports.keys())[0]
    resources = reports[report_key]['resources']
    resource_key = list(resources.keys())[0]
    resource = resources[resource_key]
    size = resource['fileSize']
    MD5 = resource['digests']['MD5']
    SHA1 = resource['digests']['SHA-1']
    SHA256 = resource['digests']['SHA-256']
    SHA512 = resource['digests']['SHA-512']
    ssdeep = resource['extendedData']['ssdeep']
    type = resource['extendedData']['fileMagicDescription']
    fuzzy_fash = resource['metaData']['fuzzyfsiohash']
    impash = resource['extendedData']['imphash']
    authenti_hash = resource['extendedData']['authentihash']
    compile_time = resource['extendedData']['dates']['dateUtc'] or None
    strings = resource['strings'][0]['references']
    verdict = resource['verdict']['verdict']

    overview = Overview.objects.create(sandbox=Sandbox.FILE_SCAN_IO,job_id=report_key, size=size, type=type, MD5=MD5,
                                      SHA1=SHA1,SHA256=SHA256,SHA512=SHA512, ssdeep=ssdeep,  compile_time=compile_time,submission_time=timezone.now(),
                                      fuzzy_hash=fuzzy_fash, impash=impash,authenti_hash=authenti_hash, target=target, verdict=verdict)
    save_strings(overview, strings)
    save_header(overview.id, resource['extendedData'])
    save_version_infos(overview, resource['extendedData']['verinfo'])
    save_sections(overview, resource['extendedData']['sections'])
    return overview
