from django.core.paginator import Paginator
from django.shortcuts import render, get_object_or_404
from django.views import View
from django.conf import settings
from analyzer.models import Overview, Target


# STATUS: OK
class AnalysisView(View):
    def get(self, request, *args, **kwargs):
        if request.GET.get('q'):
            keyword = request.GET.get('q')
            # LIKE operation in DB with end keyword __contains

            try:
                target = Target.objects.get(name__contains=keyword)
                analysis = Overview.objects.filter(target=target)
            except Target.DoesNotExist:
                return render(request, "analyzer/analysis.html", context={})
        else:
            analysis = Overview.objects.all()

        analysis = analysis.order_by('-submission_time')
        item_per_page = settings.GLOBAL_SETTINGS['item_per_page']
        paginator = Paginator(analysis, item_per_page)
        page_number = request.GET.get('page')
        page_obj = paginator.get_page(page_number)
        context = {
            'analysis': page_obj,
            'item_per_page': item_per_page
        }

        return render(request, "analyzer/analysis.html", context=context)
