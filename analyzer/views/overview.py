import pathlib
from glob import glob

from django.shortcuts import render, get_object_or_404
from analyzer.api.save_report import download_report_analyse
from analyzer.models import Sandbox
from analyzer.models.report import Report
from analyzer.views.utils import get_file_in_response, get_sandbox_report

from storage import report_storage

report_format_dispatcher = {
    Sandbox.COMBINED: ['html', 'pdf', 'stix', 'misp'],
    Sandbox.CUCKOO: ['json', 'html', 'all', 'dropped', 'packaged_files'],
    Sandbox.VIRUS_TOTAL: []
}


def delete_file_by_regex(regex, storage):
    for file in glob(regex):
        storage.delete(file)


def get_analyse_overview(request, report_id, sandbox):
    report = get_object_or_404(Report, pk=report_id)
    overview = get_sandbox_report(report, sandbox)
    context = {
        'report': report,
        'overview': overview,
        'report_formats': report_format_dispatcher.get(overview.sandbox),
        'screenshots': overview.screenshots.all(),
        'sandbox': sandbox
    }
    return render(request, "analyzer/overview.html", context)


# STATUS: OK
def download_sample(request, report_id):
    report = get_object_or_404(Report, pk=report_id)
    file = report.target.name
    response = get_file_in_response(file, file.url, file.name)
    file.close()
    return response


# STATUS: OK
def download_report(request, report_id, sandbox, report_format):
    report = get_object_or_404(Report, pk=report_id)
    overview = get_sandbox_report(report, sandbox)
    job_id = overview.job_id
    report_name = '%s.%s' % (job_id, report_format)
    content = download_report_analyse(job_id, overview.sandbox, report_format)
    file = report_storage.open(report_name, 'wb')
    file.write(content)
    report_path = pathlib.Path(report_name).parent.absolute()
    return get_file_in_response(content, report_path, report_name)
