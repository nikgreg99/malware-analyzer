import pathlib
from glob import glob

from django.shortcuts import render, get_object_or_404, redirect
from django.conf import settings
from analyzer.api.dispatchers import download_report_analyse
from analyzer.models import Overview, Sandbox
from analyzer.views.utils import get_file_in_response

from storage import report_storage, screen_storage

report_format_dispatcher = {
    Sandbox.FILE_SCAN_IO: ['html', 'pdf', 'stix', 'misp'],
    Sandbox.CUCKOO: ['json', 'html', 'all', 'dropped', 'packaged_files']
}


def delete_file_by_regex(regex, storage):
    for file in glob(regex):
        storage.delete(file)


def get_analyse_overview(request, overview_id):
    overview = get_object_or_404(Overview, pk=overview_id)
    context = {
        'overview': overview,
        'report_formats': report_format_dispatcher.get(overview.sandbox),
        'screenshots': overview.screenshots.all()
    }
    return render(request, "analyzer/overview.html", context)


# STATUS: OK
def download_sample(request, overview_id):
    analyse = get_object_or_404(Overview, pk=overview_id)
    file = analyse.target.name
    response = get_file_in_response(file, file.url, file.name)
    file.close()
    return response


# STATUS: OK
def download_report(request, overview_id, report_format):
    analyse = Overview.objects.filter(pk=overview_id).get()
    job_id = analyse.job_id
    report_name = '%s.%s' % (job_id, report_format)
    if not report_storage.exists(report_name):
        response = download_report_analyse(job_id, analyse.sandbox, report_format)
        file = report_storage.open(report_name, 'wb')
        content = response.content
        file.write(content)
    else:
        file = report_storage.open(report_name, 'rb')
        content = file.read()
    file.close()
    report_path = pathlib.Path(report_name).parent.absolute()
    return get_file_in_response(content, report_path, report_name)


