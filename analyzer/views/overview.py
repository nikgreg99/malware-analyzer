import mimetypes
import os.path

from django.http import HttpResponse
from django.shortcuts import render, get_object_or_404, redirect
from django.conf import settings
from analyzer.api.dispatcher import download_report_analyse
from analyzer.models import Analyse, Sandbox

file_scan_io_report_format_supported = ['html', 'pdf', 'stix', 'misp']
hybrid_analysis_report_format_supported = ['json', 'html', 'pdf', 'maec', 'stix', 'misp', 'misp-json', 'openioc']


def get_file_in_response(content, file_path, file_name):
    mime_type = mimetypes.guess_type(file_path)
    response = HttpResponse(content, content_type=mime_type)
    response["Content-Disposition"] = "attachment; filename=%s" % file_name
    return response


def get_analyse_overview(request, analyse_id):
    analyse = get_object_or_404(Analyse, pk=analyse_id)
    if analyse.sandbox == Sandbox.FILE_SCAN_IO:
        report_formats = file_scan_io_report_format_supported
    if analyse.sandbox == Sandbox.HYBRID_ANALYSIS:
        report_formats = hybrid_analysis_report_format_supported
    context = {
        'analyse': analyse,
        'report_formats': report_formats
    }
    return render(request, "analyzer/overview.html", context)


def download_sample(request, analyse_id):
    analyse = Analyse.objects.filter(pk=analyse_id).get()
    file = analyse.target.name
    file.close()
    return get_file_in_response(file, file.url, file.name)


def download_report(request, analyse_id, report_format):
    analyse = Analyse.objects.filter(pk=analyse_id).get()
    job_id = analyse.job_id
    file_name = job_id + "." + report_format
    file_path = settings.REPORT_ROOT + "/" + file_name
    if not os.path.exists(file_path):
        response = download_report_analyse(job_id, analyse.sandbox, report_format)
        file = open(file_path, 'wb')
        content = response.content
        file.write(content)
    else:
        file = open(file_path, 'rb')
        content = file.read()
    response = get_file_in_response(content, file_path, file_name)
    file.close()
    return response


def delete_analyse(request, analyse_id):
    analyse = Analyse.objects.filter(pk=analyse_id).get()
    analyse.delete()
    response = redirect("/analyzer")
    return response
