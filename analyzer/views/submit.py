import os

from django.conf import settings
from django.core.files.base import ContentFile
from django.shortcuts import redirect, render
from django.views.generic.base import View

from analyzer.api import HybridAnalysisAPI
from analyzer.api import HybridAnalysisAPIEnvironment
from analyzer.models import Target

from storage import uploads_storage

from analyzer.api import save_hybrid_analysis_analyse

hybrid_analysis = HybridAnalysisAPI("l7vx8tox74bcdc98nzw6b5co1854320c6ftggo6379b48a29l7mamvhk5e00f0df")


def upload_file(request, file_name: str):
    full_filename = os.path.join(settings.MEDIA_ROOT, file_name)
    f_out = uploads_storage.open(full_filename, "wb+")
    file_content = ContentFile(request.FILES["file"].read())
    for chunk in file_content.chunks():
        f_out.write(chunk)


class SubmitFile(View):

    def get(self, request, *args, **kwargs):
        context = dict()
        return render(request, "analyzer/submit_file.html", context)

    def post(self, request, *args, **kwargs):
        file_name = request.FILES["file"].name
        upload_file(request, file_name)

        response = hybrid_analysis.submit_file(file_name, HybridAnalysisAPIEnvironment.WIN7_64_BIT)
        job_id = response["job_id"]
        json_analyse = hybrid_analysis.report_id_summary(job_id)
        target = Target.objects.all().filter(file=file_name)

        if not target.exists():
            target = Target(file=file_name)
            target.save()
        else:
            target = target.get()

        target_id = target.id
        save_hybrid_analysis_analyse(target_id, json_analyse)

        response = redirect("/analyzer/")
        return response


class SubmitURL(View):

    def get(self, request, *args, **kwargs):
        return render(request, "analyzer/submit_url.html")
