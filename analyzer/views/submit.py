import os
from django.conf import settings
from django.core.files.base import ContentFile
from django.http import HttpResponseBadRequest
from django.shortcuts import redirect, render
from django.urls import reverse
from django.views.generic.base import View

from analyzer.api.dispatchers import save_analyse_file, SubmitFileDispatcher, SubmitURLDispatcher, save_analyse_url
from analyzer.api.wrapper import HybridAnalysisAPIEnvironment
from analyzer.forms import FileUploadForm
from analyzer.models import Target, Sandbox
from analyzer.models.target import TargetType

from storage.upload import upload_storage

environments: dict[str, HybridAnalysisAPIEnvironment] = {
    'Windows 7 32 bit': HybridAnalysisAPIEnvironment.WIN7_32_BIT,
    'Windows 7 64 bit': HybridAnalysisAPIEnvironment.WIN7_64_BIT,
    'Linux Ubuntu 16.04 (64 bit)': HybridAnalysisAPIEnvironment.LINUX_UBUNTU_16_04_64_BIT,
    'Android Static Analysis': HybridAnalysisAPIEnvironment.ANDROID_STATIC_ANALYSIS,
    'Windows 32 bit HWP Support': HybridAnalysisAPIEnvironment.WIN7_32_BIT_HWP_SUPPORT
}


def create_submission_context():
    context = {
        'sandboxes': Sandbox.labels,
        'environments': environments.keys()
    }
    return context


# STATUS: OK
def write_file(request, file_name: str):
    full_filename = os.path.join(settings.MEDIA_ROOT, file_name)
    f_out = upload_storage.open(full_filename, "wb+")
    file_content = ContentFile(request.FILES["file"].read())
    for chunk in file_content.chunks():
        f_out.write(chunk)


# STATUS: OK
class SubmitFile(View):

    def get(self, request, *args, **kwargs):
        context = create_submission_context()
        return render(request, "analyzer/submit_file.html", context)

    def post(self, request, *args, **kwargs):
        file_form = FileUploadForm(request.POST, request.FILES or None)
        if file_form.is_valid():
            file_name = request.FILES["file"].name
            sandbox = request.POST["sandbox"]
            write_file(request, file_name)
            file, created = Target.objects.get_or_create(name=file_name, type=TargetType.FILE)
            analyse = save_analyse_file(file, sandbox)
            return redirect(reverse('analyzer:overviewAnalyse', args=(analyse.id,)), analyse)
        return HttpResponseBadRequest('File upload is not valid')


# STATUS: OK
class SubmitURL(View):
    def get(self, request, *args, **kwargs):
        context = create_submission_context()
        return render(request, "analyzer/submit_url.html", context)

    def post(self, request, *args, **kwargs):
        url = request.POST["url"]
        sandbox = request.POST["sandbox"]
        url, created = Target.objects.get_or_create(name=url, type=TargetType.URL)
        analyse = save_analyse_url(url, sandbox)
        return redirect(reverse('analyzer:overviewAnalyse', args=(analyse.id,)), analyse)
